/*
	This is unlit mesh vertex shader
*/

#include <Shaders/shaders.inc>

#if defined( EAE6320_PLATFORM_D3D )

// Entry Point
//============

void main(

	// Input
	//======
	
	in const float3 i_position : POSITION,
	in const float2 i_uv : TEXCOORD,
	in const float4 i_color : COLOR,

	// Output
	//=======
	
	out float4 o_position : SV_POSITION,
	out float2 o_uv : TEXCOORD,
	out float4 o_color : COLOR
	)
	
#elif defined( EAE6320_PLATFORM_GL )

// Input
//======

layout( location = 0 ) in vec3 i_position;
layout( location = 1 ) in vec2 i_uv;
layout( location = 2 ) in vec4 i_color;

// Output
//=======

layout( location = 0 ) out vec2 o_uv;
layout( location = 1 ) out vec4 o_color;

// Entry Point
//============

void main()

#endif

{
	// Calculate the position of this vertex on screen
	{
		o_position = mul( g_transform_localToProjected, float4( i_position, 1.0 ) );
	}
	
	// Pass the input color and the texture coordinates to the fragment shader unchanged
	{
		o_uv = i_uv;
		o_color = i_color;
	}
}